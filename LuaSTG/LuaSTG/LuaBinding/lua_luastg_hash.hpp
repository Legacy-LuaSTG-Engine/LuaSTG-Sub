// Write by Kuanlan (Kuanlan@outlook.com)
// Minimum perfect hash function for Lua language binding.
// This source file is generated by code generator.
// Don't modify this file directly, please modify the generator configuration.

#pragma once

namespace LuaSTG {
    enum class GameObjectMember {
        __NOT_FOUND = -1,
        _A = 1,
        VANGLE = 2,
        _B = 3,
        _BLEND = 4,
        _COLOR = 5,
        _G = 6,
        _R = 7,
        VSPEED = 8,
        A = 9,
        AG = 10,
        ANI = 11,
        AX = 12,
        AY = 13,
        B = 14,
        BOUND = 15,
        CLASS = 16,
        COLLI = 17,
        COLLIDER = 18,
        DX = 19,
        DY = 20,
        GROUP = 21,
        HIDE = 22,
        HSCALE = 23,
        IMG = 24,
        LAYER = 25,
        MAXV = 26,
        MAXVX = 27,
        MAXVY = 28,
        NAVI = 29,
        IGNORESUPERPAUSE = 30,
        OMEGA = 31,
        PAUSE = 32,
        RES_RC = 33,
        RECT = 34,
        RESOLVEMOVE = 35,
        ROT = 36,
        STATUS = 37,
        TIMER = 38,
        VSCALE = 39,
        VX = 40,
        VY = 41,
        WORLD = 42,
        X = 43,
        Y = 44,
    };
    GameObjectMember MapGameObjectMember(const char* key);
}

namespace LuaSTG {
    enum class BlendModeX {
        __NOT_FOUND = -1,
        AddAdd = 6,
        AddAlpha = 5,
        AddMax = 15,
        AddMin = 14,
        AddMutiply = 16,
        AddRev = 7,
        AddScreen = 17,
        AddSub = 8,
        AlphaBal = 9,
        MulAdd = 2,
        MulAlpha = 1,
        MulMax = 11,
        MulMin = 10,
        MulMutiply = 12,
        MulRev = 3,
        MulScreen = 13,
        MulSub = 4,
        One = 18,
    };
    BlendModeX MapBlendModeX(const char* key);
}

namespace LuaSTG {
    enum class ColorMember {
        __NOT_FOUND = -1,
        f_AHSV = 1,
        f_ARGB = 2,
        m_a = 3,
        m_argb = 4,
        m_b = 5,
        m_g = 6,
        m_h = 7,
        m_r = 8,
        m_s = 9,
        m_v = 10,
    };
    ColorMember MapColorMember(const char* key);
}

