# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2025

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Cache C++ packages
        id: cache-cpp
        uses: actions/cache@v4
        with:
          path: |
            build/packages
          key: cache-cpp-all
          restore-keys: |
            cache-cpp-all
      
      - if: ${{ steps.cache-cpp.outputs.cache-hit != 'true' }}
        name: Report cache state
        continue-on-error: true
        run: echo "Cache miss"

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
      
      #- name: CMake configure
      #  run: cmake -S . -B build -G "Visual Studio 17 2022" -A Win32,version=10.0.22621.0 -DCPM_SOURCE_CACHE=build/packages
      
      #- name: CMake build
      #  run: cmake --build build --target LuaSTG --config Release
        
      #- name: Test
      #  run: build/bin/main.exe

      - name: CMake workflow (x86)
        run: cmake --workflow --preset windows-x86-release
      
      - name: CMake workflow (amd64)
        run: cmake --workflow --preset windows-amd64-release

      - name: Package  
        run: pwsh scripts/package.ps1

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: |
            build/releases/*.zip
          retention-days: 7
